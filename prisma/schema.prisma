generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id          Int @id @default(autoincrement())
  email       String @unique
  password    String
  credentials Credential[]
  safeNotes   SafeNote[]
  credtiCards CreditCard[]
  wifis       Wifi[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  @@map("users")
}

model Credential{
  id              Int @id @default(autoincrement())
  userId          Int
  onwer           User @relation(fields: [userId], references: [id]) 
  username        String
  password        String
  url             String
  title           String 
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())

  @@unique([userId,title])

  @@map("credentials")
}

model SafeNote {
  id          Int @id @default(autoincrement())
  userId      Int
  owner       User @relation(fields: [userId], references: [id]) 
  title       String
  content     String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  
  @@unique([userId,title])
  
  @@map("safenotes")
}

model CreditCard {
  id          Int @id @default(autoincrement())
  userId      Int
  owner       User @relation(fields: [userId], references: [id])
  name        String 
  number      String
  expiry      String
  cvv         String
  password    String
  isVirtual   Boolean
  type        CardType
  title       String 
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  
  @@unique([userId,number])
  
  @@map("creditcards")
}


model Wifi {
  id          Int @id @default(autoincrement())
  userId      Int
  owner       User @relation(fields: [userId], references: [id])
  ssid        String
  password    String
  title       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  
  @@unique([userId,ssid])
  
  @@map("wifis")
}


enum CardType {
  Debit
  Credit
  Both
}